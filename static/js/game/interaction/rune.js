// Generated by CoffeeScript 1.7.1
(function() {
  var runeHealth, runeLightning, runePortal, runeRecall;

  window.Brew.Interaction.Rune = {
    use: function(user, rune_item) {
      var new_id;
      if (rune_item.itemType === Brew.ItemType.type_of.rune.health.id) {
        runeHealth(rune_item);
      } else if (rune_item.itemType === Brew.ItemType.type_of.rune.portal.id) {
        runePortal(rune_item);
      } else if (rune_item.itemType === Brew.ItemType.type_of.rune.recall.id) {
        runeRecall(rune_item);
      } else if (rune_item.itemType === Brew.ItemType.type_of.rune.lightning.id) {
        runeLightning(rune_item);
      } else {
        console.error("unexpected rune item", rune_item);
      }
      new_id = Brew.Catalog.identify(rune_item);
      return true;
    }
  };

  runeRecall = function(rune) {
    return Brew.Axe.doRecallAxe(rune);
  };

  runeHealth = function(rune) {
    var level, player;
    player = Brew.gamePlayer();
    level = Brew.gameLevel();
    player.getStat(Brew.stat.health).addTo(1);
    Brew.Display.drawHudAll();
    level.removeItemAt(rune.coordinates);
    return Brew.Game.endPlayerTurn();
  };

  runeLightning = function(rune) {
    var level, player;
    player = Brew.gamePlayer();
    level = Brew.gameLevel();
    player.setFlag(Brew.flags.conjure_lightning.id);
    player.createStat(Brew.stat.ammo, Brew.config.lightning_ammo_per_rune);
    Brew.msg("Bzzt!");
    Brew.Display.drawHudAll();
    level.removeItemAt(rune.coordinates);
    return Brew.Game.endPlayerTurn();
  };

  runePortal = function(rune) {
    var level, monster_at, old_xy, player, teleport_xy;
    player = Brew.gamePlayer();
    level = Brew.gameLevel();
    old_xy = player.coordinates;
    teleport_xy = rune.pair_xy;
    monster_at = level.getMonsterAt(teleport_xy);
    if (monster_at != null) {
      if (monster_at.hasFlag(Brew.flags.cant_telefrag.id)) {
        Brew.msg("Blocked!");
      } else {
        Brew.Combat.killMonster(player, monster_at, false);
      }
    }
    level.removeMonsterAt(old_xy);
    level.setMonsterAt(teleport_xy, player);
    Brew.Display.drawMapAt(old_xy);
    Brew.Display.drawMapAt(teleport_xy);
    Brew.Sounds.play("portal");
    return Brew.Game.endPlayerTurn();
  };

}).call(this);

//# sourceMappingURL=rune.map
