// Generated by CoffeeScript 1.7.1
(function() {
  var howl_sounds, i, num_sounds, play_sound, sound_id, sound_name, sound_path, sounds_def, _i, _ref,
    __hasProp = {}.hasOwnProperty;

  howl_sounds = {
    bump: new Howl({
      src: ['/static/audio/bump_0.wav']
    })
  };

  sounds_def = {
    "bump": 2,
    "dropaxe": 1,
    "hit": 3,
    "pickup": 3,
    "portal": 1,
    "new_level": 1
  };

  howl_sounds = {};

  for (sound_name in sounds_def) {
    if (!__hasProp.call(sounds_def, sound_name)) continue;
    num_sounds = sounds_def[sound_name];
    for (i = _i = 0, _ref = num_sounds - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      sound_id = sound_name + "_" + ("" + i);
      sound_path = "/static/audio/" + sound_id + ".wav";
      howl_sounds[sound_id] = new Howl({
        src: [sound_path]
      });
    }
  }

  play_sound = false;

  Brew.Sounds = {
    play: function(sound_name) {
      var random_num;
      if (play_sound) {
        if (!(sound_name in sounds_def)) {
          console.error("bad sound " + sound_name);
        }
        num_sounds = sounds_def[sound_name];
        random_num = Math.floor(num_sounds * ROT.RNG.getUniform());
        sound_id = sound_name + "_" + ("" + random_num);
        return howl_sounds[sound_id].play();
      }
    },
    mute: function() {
      var onoff;
      play_sound = !play_sound;
      onoff = play_sound ? "On" : "Off";
      return console.log("Sound " + onoff);
    }
  };

}).call(this);

//# sourceMappingURL=brew_sound.map
