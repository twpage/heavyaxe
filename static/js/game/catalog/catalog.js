// Generated by CoffeeScript 1.7.1
(function() {
  var isIdentified, isRandomizedItemType, randomized_groups,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  randomized_groups = [];

  window.Brew.Catalog = {
    getArticleForItem: function(item) {
      var article, item_name, _ref;
      article = null;
      item_name = Brew.Catalog.getItemName(item);
      if (item.group === Brew.group.armor.id) {
        article = "";
      } else if ((_ref = item_name[0].toLowerCase()) === 'a' || _ref === 'e' || _ref === 'i' || _ref === 'o' || _ref === 'u') {
        article = "an ";
      } else {
        article = "a ";
      }
      return article;
    },
    getItemName: function(item) {
      var name;
      if (isRandomizedItemType(item)) {
        if (isIdentified(item)) {
          name = Brew.ItemType.type_of[item.group][item.itemType].real_name;
        } else {
          name = Brew.ItemType.type_of[item.group][item.itemType].unidentified_name;
        }
      } else {
        name = item.name;
      }
      return name;
    },
    randomizeItemCatalog: function(seed) {
      var i, random_name, scroll_type, _i, _len, _ref, _results;
      Brew.ItemType.randomNames.scroll = Brew.ItemType.randomNames.scroll.randomize();
      i = 0;
      _ref = Brew.ItemType.list_of.scroll;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        scroll_type = _ref[_i];
        random_name = Brew.ItemType.randomNames.scroll[i];
        Brew.ItemType.type_of.scroll[scroll_type].unidentified_name = "scroll entitled " + random_name;
        Brew.ItemType.type_of.scroll[scroll_type].is_identified = false;
        _results.push(i += 1);
      }
      return _results;
    },
    getItemDescription: function(item) {
      var desc, _ref;
      if (isRandomizedItemType(item)) {
        if (isIdentified(item)) {
          desc = Brew.ItemType.type_of[item.group][item.itemType].description;
        } else {
          desc = "Its contents are a mystery";
        }
      } else {
        desc = (_ref = item.description) != null ? _ref : "Seems normal enough";
      }
      return desc;
    },
    getItemColor: function(item) {
      if (isIdentified(item)) {
        return item.color;
      } else {
        return Brew.group[item.group].color;
      }
    },
    identify: function(item) {
      if (isIdentified(item)) {
        return false;
      }
      if (isRandomizedItemType(item)) {
        Brew.ItemType.type_of[item.group][item.itemType].is_identified = true;
        return true;
      }
      return false;
    },
    isIdentified: function(item) {
      return isIdentified(item);
    }
  };

  isIdentified = function(item) {
    if (isRandomizedItemType(item)) {
      return Brew.ItemType.type_of[item.group][item.itemType].is_identified;
    } else {
      return true;
    }
  };

  isRandomizedItemType = function(item) {
    var _ref;
    return _ref = item.group, __indexOf.call(randomized_groups, _ref) >= 0;
  };

}).call(this);

//# sourceMappingURL=catalog.map
